import 'reflect-metadata';
import { IScope } from './scope';
import { ITransformer } from './mapper';
import { Class } from './utils';
export declare const dto: () => ClassDecorator;
export declare const include: () => PropertyDecorator;
export declare const scope: (...scopes: IScope[]) => PropertyDecorator;
export declare const mapTo: (to: string) => PropertyDecorator;
export declare const transform: (transformer: ITransformer<any, any>) => PropertyDecorator;
export interface INestedMetadata {
    accessor: () => Class<any>;
    many: boolean;
}
export declare const nested: (accessor: () => Class<any>, many?: boolean) => PropertyDecorator;
