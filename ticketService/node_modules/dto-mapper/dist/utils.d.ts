import { IMapper, ITransformer, ITransformFunction } from './mapper';
export interface Class<T> extends Function {
    new (): T;
}
export declare function buildMapper<EntityT, DtoT>(dtoClass: Class<DtoT>, ignoreNested?: boolean): IMapper<DtoT, EntityT>;
export declare function combineTransformFunction<T = any, U = any>(functions: ITransformFunction<any, any>[]): ITransformFunction<T, U>;
export declare function combineTransformers<T = any, U = any>(transformers: ITransformer<any, any>[]): ITransformer<T, U>;
